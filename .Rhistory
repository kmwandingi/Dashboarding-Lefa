round(districtscount@data$Total/3, digits = 0),
"<br><strong>Density: </strong>",
round(x, digits = 3),
" per sq km"
)
Total_orders <- sum(orderstatp$Freq)
n <- nrow(PickDate)
Last_Month <- sum(PickDate[(n-31):n,2])
distorderstat <- chord
distorderstat$order.status[distorderstat$order.status != 'FINISHED_PAID'] <- 'Cancelled'
distorderstat$order.status[distorderstat$order.status == 'FINISHED_PAID'] <- 'Finished'
myPalette <- c("#011f4b", "#03396c", "#005b96","#6497b1", "#009688", "#35a79c","#4d648d",
"#283655","#1e1f26",'#713CA0', '#42235C', '#CEA7F1')
rm(annotchrt, condat, dat, data)
# O18 <- O18[,9:10]
gc(reset = T)
#district by day
ggplot(TaxiPickData) +
aes(x = Neighborhood, fill = wday, weight = Count) +
geom_bar() +
scale_fill_hue() +
theme_minimal()
#district by bundle
distorderstat <- distorderstat %>%
filter(!(bundle %in% ""))
ggplot(distorderstat) +
aes(x = Constituency, fill = bundle) +
geom_bar(position = "fill") +
scale_fill_hue() +
theme_minimal()
#district finished or no
distorderstat <- distorderstat %>%
filter(!(bundle %in% ""))
ggplot(distorderstat) +
aes(x = Constituency, fill = order.status) +
geom_bar(position = "fill") +
scale_fill_hue() +
coord_flip() +
theme_minimal()
#district cancellation reason
distorderstat <- distorderstat %>%
filter(!is.na(cancellation.reason)) %>%
filter(!(bundle %in% ""))
ggplot(distorderstat) +
aes(x = Constituency, fill = cancellation.reason) +
geom_bar(position = "fill") +
scale_fill_hue() +
coord_flip() +
theme_minimal()
runApp()
runApp()
View(distorderstat)
View(distorderstat)
distorderstat <- chord
distorderstat$order.status[distorderstat$order.status != 'FINISHED_PAID'] <- 'Cancelled'
View(distorderstat)
distorderstat$order.status[distorderstat$order.status == 'FINISHED_PAID'] <- 'Finished'
View(distorderstat)
runApp()
runApp()
ggplotly(
ggplot(distorderstat) +
aes(x = Constituency, fill = cancellation.reason) +
geom_bar(position = "fill") +
scale_fill_manual(values=myPalette) +
coord_flip() +
theme_minimal() +
labs(x = "", y = "Orders", fill = "")%>%
config(displayModeBar = F)
)
ggplotly(
ggplot(TaxiPickData) +
aes(x = Neighborhood, fill = wday, weight = Count) +
geom_bar() +
scale_fill_manual(values=myPalette)  +
theme_minimal() +
labs(x = "", y = "Orders", fill = "")
)%>%
ggplotly(
ggplot(TaxiPickData) +
aes(x = Neighborhood, fill = wday, weight = Count) +
geom_bar() +
scale_fill_manual(values=myPalette)  +
theme_minimal() +
labs(x = "", y = "Orders", fill = "")
)%>%
config(displayModeBar = F)
ggplotly(
ggplot(TaxiPickData) +
aes(x = Neighborhood, fill = wday, weight = Count) +
geom_bar() +
scale_fill_manual(values=myPalette)  +
theme_minimal() +
labs(x = "", y = "Orders", fill = "")
)%>%
config(displayModeBar = F)            ggplotly(
ggplot(TaxiPickData) +
aes(x = Neighborhood, fill = wday, weight = Count) +
geom_bar() +
scale_fill_manual(values=myPalette)  +
coord_flip() +
theme_minimal() +
labs(x = "", y = "Orders", fill = "")
)%>%
config(displayModeBar = F)
runApp()
runApp()
esquisse::esquisser()
runApp()
View(count_tojoin)
View(TaxiPickData)
View(PickDate)
View(dayHour)
condat$`created at`<- as.character(condat$`created at`)
condat$ymd <-dmy_hms(condat$'created at')
condat$month <- lubridate::month(condat$ymd, label = TRUE)
condat$year <- lubridate::year(condat$ymd)
condat$wday <- lubridate::wday(condat$ymd, label = TRUE)
condat$hour <- lubridate::hour(condat$ymd)
#date cleanup
condat$ymd <- as.character(condat$ymd)
condat$ymd<-substr(condat$ymd, 1, 10)
condat$ymd<- lubridate::ymd(condat$ymd)
condat <- data%>%dplyr::select(order.id,Longitude, Latitude, NAME_2,order.source) %>% dplyr::rename('order id' = order.id, Constituency = NAME_2)
condat<-merge(x=O18,y=condat,by="order id")
library(readxl)
library(lubridate)
library(shiny)
library(shinydashboard)
library(googleVis)
library(leaflet)
library(plyr)
library(lubridate)
library(ggplot2)
library(dplyr)
library(plyr)
library(plotly)
library(raster)
library(rgeos)
library(leaflet)
# library(leaflet.extras) #to suspend scrolling
require(shinythemes)
library(sp)
library(rgdal)
library(htmltools)
library(chorddiag)
library(reshape2)
gc(reset = T)
#--------------
#
# feb18 <- read_excel("1. Feb 2018 Orders.xlsx")
# mar18 <- read_excel("2. March 2018 Orders.xlsx")
# apr18 <- read_excel("3. April 2018 Orders.xlsx")
# may18 <- read_excel("4. May 2018 Orders.xlsx")
# jun18 <- read_excel("5. June 2018 Orders.xlsx")
# jul18 <- read_excel("6. July 2018 Orders.xlsx")
# aug18 <- read_excel("7. Aug 2018 Orders.xlsx")
# sep18 <- read_excel("8. Sept 2018 Orders.xlsx")
# oct18 <- read_excel("9. Oct 2018 Orders.xlsx")
# oct18 <- within(oct18, rm("passenger cancellation fee, NAD","driver cancellation fee, NAD"))
# nov18 <- read_excel("10. Nov 2018 Orders.xlsx")
# nov18 <- within(nov18, rm("passenger cancellation fee, NAD","driver cancellation fee, NAD"))
# dec18 <- read_excel("11. Dec 2018 Orders.xlsx")
# dec18 <- within(dec18, rm("passenger cancellation fee, NAD","driver cancellation fee, NAD"))
# jan19 <- read_excel("12. Jan 2019 Orders.xlsx")
# feb19 <- read_excel("13. Feb 2019 Orders.xlsx")
# mar19 <- read_excel("14. Mar 2019 Orders.xlsx")
# apr19 <- read_excel("15. Apr 2019 Orders.xlsx")
# may19 <- read_excel("16. May 2019 Orders.xlsx")
# jun19 <- read_excel("17. Jun 2019 Orders.xlsx")
# jul19 <- read_excel("18. Jul 2019 Orders.xlsx")
# aug19 <- read_excel("19. Aug 2019 Orders.xlsx")
#check colnames that are not in all dfs
#setdiff(names(nov18), names(may18))
#--------------
# O18 <- rbind.fill(feb18, apr18, mar18, may18, jun18, jul18, aug18, sep18, oct18, nov18, dec18, jan19, feb19, mar19, apr19, may19, jun19, jul19, aug19)
#
# rm(feb18, apr18, mar18, may18, jun18, jul18, aug18, sep18, oct18, nov18, dec18,
#    jan19, feb19, mar19, apr19, may19, jun19, jul19, aug19)
O18 <- readRDS(file = "O18.rds")
gc()
#format <- guess_formats(O18, c("created at"))
O18$`created at`<- as.character(O18$`created at`)
O18$ymd <-dmy_hms(O18$'created at')
O18$month <- month(O18$ymd, label = TRUE)
O18$year <- year(O18$ymd)
O18$wday <- wday(O18$ymd, label = TRUE)
O18$hour <- hour(O18$ymd)
#date cleanup
O18$ymd <- as.character(O18$ymd)
O18$ymd<-substr(O18$ymd, 1, 10)
O18$ymd<- ymd(O18$ymd)
#summarise orders
dayHour <- ddply(O18, c( "hour", "wday"), summarise,
N    = length(ymd)
)
date <- ddply(O18, c( "ymd"), summarise,
N    = length(ymd)
)
#reverse order of months for easier graphing
dayHour$wday <- factor(dayHour$wday, levels=rev(levels(dayHour$wday)))
#attach(dayHour)
#Assign color variables
col1 = "#d8e1cf"
col2 = "#438484"
#piecharts-----------------
orderstat<-as.data.frame(table(unlist(O18$`order status`)))
names(orderstat)[names(orderstat) == 'Var1'] <- 'orderstat'
cancres <- as.data.frame(table(unlist(O18$`cancellation reason`)))
#drop(orderstat$Var1)
#add up by cancelled and finished only
#orderstat <- do.call(rbind,lapply(c('CANCELLED', 'FINISHED_PAID', 'FINISHED_UNPAID'),
#                            function(x) {
#                             x1 <- orderstat[grep(x, orderstat$orderstat, ignore.case=FALSE),]
#                            data.frame(orderstat= x, freq=sum(x1$freq))}))
Cancelled = grep(orderstat$orderstat, pattern = "CANCELLED")
Finished_Paid = grep(orderstat$orderstat, pattern = "FINISHED_PAID")
Finished_Unpaid = grep(orderstat$orderstat, pattern = "FINISHED_UNPAID")
orderstatp = data.frame(orderstat = c("CANCELLED", "FINISHED_PAID", "FINISHED_UNPAID"),
Freq = c(sum(orderstat$Freq[Cancelled]),
sum(orderstat$Freq[Finished_Paid]),
sum(orderstat$Freq[Finished_Unpaid])))
#Holidays---------------
Nam_Public_Holidays <- read_excel("Nam Public Holidays.xlsx")
Nam_Public_Holidays$ymd<- ymd(Nam_Public_Holidays$Date)
Nam_Public_Holidays$Day<- NULL
Nam_Public_Holidays$Date<- NULL
#annotation orders--------------
anotdates<-merge(date, Nam_Public_Holidays, by=c("ymd"),all=TRUE)
#delete NA rows in ymd
anotdates <- anotdates[!(is.na(anotdates$ymd)),]
#annotationchart
annotchrt<-gvisAnnotationChart(anotdates, datevar="ymd",
numvar="N",
annotationvar="Holiday")
#leaflet-----------------
#https://stackoverflow.com/questions/40162934/split-x-y-coordinates-that-were-combined-by-r
O18 <- tidyr::separate(O18, `origin location`, into = c("lat", "long"), sep = ",")
O18$lat <- as.numeric(gsub("c\\(", "", O18$lat))
O18$long <- as.numeric(gsub("\\)", "", O18$long))
# Create a palette that maps factor levels to colors
pal <- colorBin("Purples", domain = O18$hour)
dat <- O18 %>% dplyr::select(long, lat,'order id', 'order source') %>% dplyr::rename(Longitude = long ,Latitude = lat)
#remove rows with missing values
dat <- na.omit(dat)
districts <- getData('GADM', country='NAM', level=2)
districts <- districts[districts$NAME_1 == 'Khomas',]
#calculate area
districts@data$Area <- raster::area(districts)/1000000
districts <- districts[districts$NAME_2 != "Windhoek Rural",]
coordinates(dat) <- ~ Longitude + Latitude
# Set the projection of the SpatialPointsDataFrame using the projection of the shapefile
proj4string(dat) <- proj4string(districts)
# intersect and extract state name
data<-as.data.frame(raster::intersect(dat, districts))
condat <- data%>%dplyr::select(order.id,Longitude, Latitude, NAME_2,order.source) %>% dplyr::rename('order id' = order.id, Constituency = NAME_2)
condat<-merge(x=O18,y=condat,by="order id")
chord <- data%>%dplyr::select(order.id,Longitude, Latitude, NAME_2) %>% dplyr::rename('order id' = order.id, Constituency = NAME_2)
chord <- merge(x=O18,y=condat,by="order id")
chord <- chord%>%dplyr::select(Constituency, "order status.x", "cancellation reason.x", bundle.x)  %>% dplyr::rename(bundle=bundle.x, order.status = "order status.x", cancellation.reason = "cancellation reason.x")
chord$bundle <- gsub('.{17}$', '', chord$bundle)
chord$n <- 1
chord %>% dplyr::group_by(Constituency, bundle) %>% dplyr::summarise(b = sum(n))-> cdb
chord %>% dplyr::group_by(Constituency, order.status) %>% dplyr::summarise(s = sum(n))-> cds
chord %>% dplyr::group_by(Constituency, cancellation.reason) %>% dplyr::summarise(c = sum(n))-> cdc
cdb <- recast(cdb, Constituency + variable ~ bundle, id.var = c("Constituency", "bundle")) %>% dplyr::select(Constituency, android, ios)
cds <- recast(cds, Constituency + variable ~ order.status, id.var = c("Constituency", "order.status")) %>% dplyr::select(-variable)
cdc <- recast(cdc, Constituency + variable ~ cancellation.reason, id.var = c("Constituency", "cancellation.reason")) %>% dplyr::select(-variable)
cdf <- cdb %>%
left_join(cds, by = "Constituency") %>%
left_join(cdc, by = "Constituency")
#chord <- chord[-1,]
row.names(cdf) <- cdf$Constituency
cdf <- cdf[,-1]
cdf <- as.matrix(cdf)
#format <- guess_formats(condat, c("created at"))
condat$`created at`<- as.character(condat$`created at`)
condat$ymd <-dmy_hms(condat$'created at')
condat$month <- lubridate::month(condat$ymd, label = TRUE)
condat$year <- lubridate::year(condat$ymd)
condat$wday <- lubridate::wday(condat$ymd, label = TRUE)
condat$hour <- lubridate::hour(condat$ymd)
#date cleanup
condat$ymd <- as.character(condat$ymd)
condat$ymd<-substr(condat$ymd, 1, 10)
condat$ymd<- lubridate::ymd(condat$ymd)
#summarise orders
dayHour <- ddply(condat, c( "hour", "wday", 'Constituency'), summarise,
N    = length(ymd)
)
dayHour$DayofWeek <- as.numeric(dayHour$wday)
dayHour$DayofWeek <- dayHour$DayofWeek - 1
PickDate <- ddply(condat, c( "ymd"), summarise,
N    = length(ymd)
)
PickDate <- PickDate %>% dplyr::rename(date=ymd, count = N)
dayHour %>% dplyr::select(Constituency, hour,wday, DayofWeek,N) %>% dplyr::rename(Count = N, Neighborhood = Constituency, Hour = hour) -> TaxiPickData
nb <- as.data.frame(districts)
nb$Neighborhood <- nb$NAME_2
nb$Zipcode <- nb$GID_2
TaxiPickData <- merge(x = TaxiPickData, y = nb[ , c("Neighborhood", "Zipcode")], by = "Neighborhood", all.x=TRUE)
TaxiPickData$Type <- "Standard"
neighborhood <- TaxiPickData$Neighborhood
names(neighborhood) <- as.character(TaxiPickData$Zipcode)
count_tojoin <- TaxiPickData
count_tojoin = count_tojoin %>%
#filter(DayofWeek == as.character(date_input)) %>%
# filter(Hour == input$hour) %>%
group_by(Zipcode) %>%
summarise(Total = sum(Count)) %>%
mutate(Zipcode=factor(Zipcode))
total <- count_tojoin$Total
names(total) <- count_tojoin$Zipcode
districtscount <- districts
districtscount@data$Total <- total[as.character(districts@data$GID_2)]
districtscount
x <- districtscount@data$Total * 10^6 / districtscount@data$Area
x_unique <- unique(x[!is.na(x)])
colPal <- colorRampPalette(c('white','purple'))(length(x_unique))
names(colPal) <- sort(x_unique)
cols <- ifelse(is.na(x), "#808080", colPal[as.character(x)])
#Popup for leaflet map
zipcodes <- as.character(districtscount@data$GID_2)
count_popup <- paste0("<strong>NBH: </strong>",
neighborhood[zipcodes],
"<br><strong>Zip Code: </strong>",
zipcodes,
"<br><strong>Count: </strong>",
round(districtscount@data$Total/3, digits = 0),
"<br><strong>Density: </strong>",
round(x, digits = 3),
" per sq km"
)
#Find Total order all time and last months
Total_orders <- sum(orderstatp$Freq)
n <- nrow(PickDate)
Last_Month <- sum(PickDate[(n-31):n,2])
distorderstat <- chord
distorderstat$order.status[distorderstat$order.status != 'FINISHED_PAID'] <- 'Cancelled'
distorderstat$order.status[distorderstat$order.status == 'FINISHED_PAID'] <- 'Finished'
myPalette <- c("#011f4b", "#03396c", "#005b96","#6497b1", "#009688", "#35a79c","#4d648d",
"#283655","#1e1f26",'#713CA0', '#42235C', '#CEA7F1')
View(condat)
View(dayHour)
dayHour <- ddply(condat, c( "hour", "wday", 'Constituency','lat', 'long'), summarise,
N    = length(ymd)
)
View(dayHour)
dayHour <- ddply(condat, c( "hour", "wday", 'Constituency'), summarise,
N    = length(ymd)
)
np
nb
View(PickDate)
View(dayHour)
dayHour <- ddply(condat, c( "hour", "wday", 'Constituency'), summarise,
N    = length(ymd), lat = mean(lat), long = mean(long)
)
View(dayHour)
dayHour$DayofWeek <- as.numeric(dayHour$wday)
dayHour$DayofWeek <- dayHour$DayofWeek - 1
View(PickDate)
View(O18)
Avgloc <- ddply(condat, c( 'Constituency'), summarise,
lat = mean(lat), long = mean(long)
)
runApp()
districtscount@data
View(count_tojoin)
View(TaxiPickData)
districtscount
Sys.Date()
View(count_tojoin)
View(TaxiPickData)
View(dayHour)
runApp()
runApp()
View(PickDate)
View(TaxiPickData)
View(PickDate)
weekdays(as.Date(PickDate$date))
as.numeric(weekdays(as.Date(PickDate$date)))
strftime(PickDate$date,'%u')
strftime(PickDate$date,'%u')-1
(strftime(PickDate$date,'%u'))-1
strftime(PickDate$date,'%u')[1]-1
runApp()
strftime(Sys.Date,'%u')
Sys.Date()
strftime(Sys.Date(),'%u')
as.numeric(strftime(Sys.Date(),'%u'))-1
runApp()
runApp()
View(O18)
colnames(O18)
AvgCost <- o18$`final cost, NAD`
AvgDist <- o18$`trip distance`
O18
AvgCost <- mean(o18$`final cost, NAD`)
AvgDist <- mean(o18$`trip distance`)
AvgCost <- mean(O18$`final cost, NAD`)
AvgDist <- mean(O18$`trip distance`)
View(O18)
mean(as.numeric(gsub('.{2}$', '', O18$`trip distance`)))
gsub('.{2}$', '', O18$`trip distance`)
as.numeric(gsub('.{2}$', '', O18$`trip distance`))
as.numeric(gsub('.{2}$', '', O18$`trip distance`))
mean(as.numeric(gsub('.{2}$', '', O18$`trip distance`)))
mean(as.numeric(gsub('.{2}$', '', O18$`trip distance`)), na.rm = FALSE)
mean(as.numeric(gsub('.{2}$', '', O18$`trip distance`)), na.rm = T)
gsub("m", ":", O18$`trip time`)
Avgtime <- gsub("m", ":", O18$`trip time`)
Avgtime <- gsub("s", "", Avgtime)
Avgtime <- gsub(" ", "", Avgtime)
Avgtime <- gsub("h", ":", Avgtime)
O18$`trip time`
Avgtime <- gsub("min", ":00", Avgtime)
Avgtime <- gsub(" ", "", Avgtime)
Avgtime
sapply(strsplit(Avgtime,":"),
function(x) {
x <- as.numeric(x)
x[1]+x[2]/60
}
)
Avgtime <- sapply(strsplit(Avgtime,":"),
function(x) {
x <- as.numeric(x)
x[1]+x[2]/60
}
)
Avgtime <- mean(Avgtime, na.rm = T)
AvgCost <- mean(O18$`final cost, NAD`,, na.rm = T)
AvgDist <- mean(as.numeric(gsub('.{2}$', '', O18$`trip distance`)), na.rm = T)
AvgCost <- round(mean(O18$`final cost, NAD`,, na.rm = T),2)
AvgDist <- round(mean(as.numeric(gsub('.{2}$', '', O18$`trip distance`)), na.rm = T),2)
Avgtime <- gsub("m", ":", O18$`trip time`)
Avgtime <- gsub("s", "", Avgtime)
Avgtime <- gsub("h", ":", Avgtime)
Avgtime <- gsub("min", ":00", Avgtime)
Avgtime <- gsub(" ", "", Avgtime)
Avgtime <- sapply(strsplit(Avgtime,":"),
function(x) {
x <- as.numeric(x)
x[1]+x[2]/60
})
Avgtime <- round(mean(Avgtime, na.rm = T), 2)
runApp()
AvgCost <- as.character(round(mean(O18$`final cost, NAD`,, na.rm = T),2))
runApp()
rlang::last_error()
rlang::last_trace()
runApp()
Avgtime <- gsub("m", ":", O18$`trip time`)
Avgtime <- gsub("s", "", Avgtime)
Avgtime <- gsub("h", ":", Avgtime)
Avgtime <- gsub("min", ":00", Avgtime)
Avgtime <- gsub(" ", "", Avgtime)
Avgtime <- sapply(strsplit(Avgtime,":"),
function(x) {
x <- as.numeric(x)
x[1]+x[2]/60
})
Avgtime <- as.character(round(mean(Avgtime, na.rm = T), 2))
AvgDist <- as.character(round(mean(as.numeric(gsub('.{2}$', '', O18$`trip distance`)), na.rm = T),2))
runApp()
Total_orders <- as.character(sum(orderstatp$Freq))
runApp()
runApp()
myPalette <- c('#CEA7F1', '#92A0ED', '#5e72e4','#713CA0', '#42235C', '#11cdef')
runApp()
myPalette <- c('#CEA7F1', '#92A0ED', '#5e72e4','#713CA0', '#42235C', '#11cdef',"#a70c79","#750855")
runApp()
myPalette <- c('#CEA7F1', '#92A0ED', '#5e72e4','#713CA0', '#42235C', '#11cdef',"#bfffea","#86b3a4")
runApp()
View(cdf)
cdf[1:(length(cdf)-1)]
runApp()
myPalette <- cols #c('#CEA7F1', '#92A0ED', '#5e72e4','#713CA0', '#42235C', '#11cdef',"#bfffea","#86b3a4")
runApp()
myPalette <- c('#CEA7F1', '#92A0ED', '#5e72e4','#713CA0', '#42235C', '#11cdef',"#bfffea","#86b3a4")
myPalette <- c('#CEA7F1', '#92A0ED', '#5e72e4','#713CA0', '#42235C', "#011f4b", "#03396c",
"#005b96","#6497b1", "#009688", "#35a79c","#4d648d", "#283655")
runApp()
runApp()
runApp()
View(cdf)
runApp()
runApp()
cdf[,-2]
cdf
chord <- data%>%dplyr::select(order.id,Longitude, Latitude, NAME_2) %>% dplyr::rename('order id' = order.id, Constituency = NAME_2)
chord <- merge(x=O18,y=condat,by="order id")
chord <- chord%>%dplyr::select(Constituency, "order status.x", "cancellation reason.x", bundle.x)  %>% dplyr::rename(bundle=bundle.x, order.status = "order status.x", cancellation.reason = "cancellation reason.x")
chord$bundle <- gsub('.{17}$', '', chord$bundle)
chord$n <- 1
chord %>% dplyr::group_by(Constituency, bundle) %>% dplyr::summarise(b = sum(n))-> cdb
chord %>% dplyr::group_by(Constituency, order.status) %>% dplyr::summarise(s = sum(n))-> cds
chord %>% dplyr::group_by(Constituency, cancellation.reason) %>% dplyr::summarise(c = sum(n))-> cdc
cdb <- recast(cdb, Constituency + variable ~ bundle, id.var = c("Constituency", "bundle")) %>% dplyr::select(Constituency, android, ios)
cds <- recast(cds, Constituency + variable ~ order.status, id.var = c("Constituency", "order.status")) %>% dplyr::select(-variable)
cdc <- recast(cdc, Constituency + variable ~ cancellation.reason, id.var = c("Constituency", "cancellation.reason")) %>% dplyr::select(-variable)
cdf <- cdb %>%
left_join(cds, by = "Constituency") %>%
left_join(cdc, by = "Constituency")
#chord <- chord[-1,]
row.names(cdf) <- cdf$Constituency
cdf <- cdf[1:(length(cdf)-1)]
cdf <- cdf[,-1]
cdf <- as.matrix(cdf)
runApp()
runApp()
